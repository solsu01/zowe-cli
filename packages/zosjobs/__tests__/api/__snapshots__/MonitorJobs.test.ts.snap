// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Monitor Jobs api method wait for job output status initial status check should produce a 'wrapped' error message if getJobs throws an error - then/catch 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
ERROR GETTING JOBS!"
`;

exports[`Monitor Jobs api method wait for job output status initial status check should produce a 'wrapped' error message if getJobs throws an error 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
ERROR GETTING JOBS!"
`;

exports[`Monitor Jobs api method wait for job output status initial status check should return immediately if the initial status is OUTPUT 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "OUTPUT",
}
`;

exports[`Monitor Jobs api method wait for job output status parameter checks should detect a blank jobid 1`] = `"Expect Error: Required parameter 'jobid' must not be blank"`;

exports[`Monitor Jobs api method wait for job output status parameter checks should detect a blank jobname 1`] = `"Expect Error: Required parameter 'jobname' must not be blank"`;

exports[`Monitor Jobs api method wait for job output status parameter checks should detect a missing jobid 1`] = `"Expect Error: Required parameter 'jobid' must be defined"`;

exports[`Monitor Jobs api method wait for job output status parameter checks should detect a missing jobname 1`] = `"Expect Error: Required parameter 'jobname' must be defined"`;

exports[`Monitor Jobs api method wait for job output status parameter checks should detect a missing session - then/catch 1`] = `"Expect Error: Required session must be defined"`;

exports[`Monitor Jobs api method wait for job output status parameter checks should detect a missing session 1`] = `"Expect Error: Required session must be defined"`;

exports[`Monitor Jobs api method wait for job output status parameter checks should detect missing IJob 1`] = `"Expect Error: IJob object (containing jobname and jobid) required"`;

exports[`Monitor Jobs api method wait for job output status polling should expire after the max attempts and the total time should exceed the attempts multiplied by the delay 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
Error Details: Reached max poll attempts of \\"4\\""
`;

exports[`Monitor Jobs api method wait for job output status polling should produce a 'wrapped' error message if a follow-up poll does not return a status 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
Error Details: An unknown status \\"undefined\\" was received."
`;

exports[`Monitor Jobs api method wait for job output status polling should produce a 'wrapped' error message if a follow-up poll throws an error 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
ERROR GETTING JOBS!"
`;

exports[`Monitor Jobs api method wait for job output status polling should return after the status has changed from ACTIVE to OUTPUT 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "OUTPUT",
}
`;

exports[`Monitor Jobs api method wait for job output status polling should return after the status has changed from INPUT to OUTPUT 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "OUTPUT",
}
`;

exports[`Monitor Jobs api method wait for output status initial status check should produce a 'wrapped' error message if getJobs throws an error - then/catch 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
ERROR GETTING JOBS!"
`;

exports[`Monitor Jobs api method wait for output status initial status check should produce a 'wrapped' error message if getJobs throws an error 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
ERROR GETTING JOBS!"
`;

exports[`Monitor Jobs api method wait for output status initial status check should return immediately if the initial status is OUTPUT 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "OUTPUT",
}
`;

exports[`Monitor Jobs api method wait for output status parameter checks should detect a blank jobid 1`] = `"Expect Error: Required parameter 'jobid' must not be blank"`;

exports[`Monitor Jobs api method wait for output status parameter checks should detect a blank jobname 1`] = `"Expect Error: Required parameter 'jobname' must not be blank"`;

exports[`Monitor Jobs api method wait for output status parameter checks should detect a missing jobid 1`] = `"Expect Error: Required parameter 'jobid' must be defined"`;

exports[`Monitor Jobs api method wait for output status parameter checks should detect a missing jobname 1`] = `"Expect Error: Required parameter 'jobname' must be defined"`;

exports[`Monitor Jobs api method wait for output status parameter checks should detect a missing session - then/catch 1`] = `"Expect Error: Required session must be defined"`;

exports[`Monitor Jobs api method wait for output status parameter checks should detect a missing session 1`] = `"Expect Error: Required session must be defined"`;

exports[`Monitor Jobs api method wait for output status polling should expire after the max attempts and the total time should exceed the attempts multiplied by the delay 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
Error Details: Reached max poll attempts of \\"4\\""
`;

exports[`Monitor Jobs api method wait for output status polling should produce a 'wrapped' error message if a follow-up poll does not return a status 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
Error Details: An unknown status \\"undefined\\" was received."
`;

exports[`Monitor Jobs api method wait for output status polling should produce a 'wrapped' error message if a follow-up poll throws an error 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
ERROR GETTING JOBS!"
`;

exports[`Monitor Jobs api method wait for output status polling should return after the status has changed from ACTIVE to OUTPUT 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "OUTPUT",
}
`;

exports[`Monitor Jobs api method wait for output status polling should return after the status has changed from INPUT to OUTPUT 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "OUTPUT",
}
`;

exports[`Monitor Jobs api method wait for status common initial status check should produce a 'wrapped' error message if getJobs throws a non imperative error - then/catch 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
ERROR GETTING JOBS!"
`;

exports[`Monitor Jobs api method wait for status common initial status check should produce a 'wrapped' error message if getJobs throws an error - then/catch 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
ERROR GETTING JOBS!"
`;

exports[`Monitor Jobs api method wait for status common initial status check should produce a 'wrapped' error message if getJobs throws an error 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
ERROR GETTING JOBS!"
`;

exports[`Monitor Jobs api method wait for status common initial status check should return immediately if the initial status is ACTIVE and the expected status is ACTIVE 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "ACTIVE",
}
`;

exports[`Monitor Jobs api method wait for status common initial status check should return immediately if the initial status is ACTIVE and the expected status is INPUT 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "ACTIVE",
}
`;

exports[`Monitor Jobs api method wait for status common initial status check should return immediately if the initial status is INPUT and the expected status is INPUT 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "INPUT",
}
`;

exports[`Monitor Jobs api method wait for status common initial status check should return immediately if the initial status is OUTPUT and the expected status is ACTIVE 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "OUTPUT",
}
`;

exports[`Monitor Jobs api method wait for status common initial status check should return immediately if the initial status is OUTPUT and the expected status is INPUT 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "OUTPUT",
}
`;

exports[`Monitor Jobs api method wait for status common initial status check should return immediately if the initial status is OUTPUT and the expected status is OUTPUT 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "OUTPUT",
}
`;

exports[`Monitor Jobs api method wait for status common initial status check should return immediately if the initial status is the expected status 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "OUTPUT",
}
`;

exports[`Monitor Jobs api method wait for status common parameter checks should detect a blank jobid 1`] = `"Expect Error: Required parameter 'jobid' must not be blank"`;

exports[`Monitor Jobs api method wait for status common parameter checks should detect a blank jobname 1`] = `"Expect Error: Required parameter 'jobname' must not be blank"`;

exports[`Monitor Jobs api method wait for status common parameter checks should detect a missing jobid 1`] = `"Expect Error: Required parameter 'jobid' must be defined"`;

exports[`Monitor Jobs api method wait for status common parameter checks should detect a missing jobname 1`] = `"Expect Error: Required parameter 'jobname' must be defined"`;

exports[`Monitor Jobs api method wait for status common parameter checks should detect a missing session - then/catch 1`] = `"Expect Error: Required session must be defined"`;

exports[`Monitor Jobs api method wait for status common parameter checks should detect a missing session 1`] = `"Expect Error: Required session must be defined"`;

exports[`Monitor Jobs api method wait for status common parameter checks should detect an invalid status 1`] = `"Expect Error: The required entry was NOT found within the input array: 'INPUT','ACTIVE','OUTPUT'"`;

exports[`Monitor Jobs api method wait for status common parameter checks should detect invalid attempts 1`] = `"Expect Error: \\"attempts\\" must be a positive integer"`;

exports[`Monitor Jobs api method wait for status common parameter checks should detect invalid attempts type 1`] = `"Expect Error: Object key 'attempts' must be of type 'number'"`;

exports[`Monitor Jobs api method wait for status common parameter checks should detect invalid watchDelay 1`] = `"Expect Error: \\"watchDelay\\" must be a positive integer"`;

exports[`Monitor Jobs api method wait for status common parameter checks should detect invalid watchDelay type 1`] = `"Expect Error: Object key 'watchDelay' must be of type 'number'"`;

exports[`Monitor Jobs api method wait for status common parameter checks should detect missing IMonitorJobParms 1`] = `"Expect Error: IMonitorJobParms object required"`;

exports[`Monitor Jobs api method wait for status common polling should expire after the max attempts and the total time should exceed the attempts multiplied by the delay 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
Error Details: Reached max poll attempts of \\"4\\""
`;

exports[`Monitor Jobs api method wait for status common polling should expire after the specified number of max attempts 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
Error Details: Reached max poll attempts of \\"10\\""
`;

exports[`Monitor Jobs api method wait for status common polling should expire after the specified number of max attempts and use the default watch delay 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
Error Details: Reached max poll attempts of \\"2\\""
`;

exports[`Monitor Jobs api method wait for status common polling should produce a 'wrapped' error message if a follow-up poll does not return a status 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
Error Details: An unknown status \\"undefined\\" was received."
`;

exports[`Monitor Jobs api method wait for status common polling should produce a 'wrapped' error message if a follow-up poll throws an error 1`] = `
"Error obtaining status for jobname \\"FAKE\\" jobid \\"FAKE\\".
ERROR GETTING JOBS!"
`;

exports[`Monitor Jobs api method wait for status common polling should return after the status has changed from ACTIVE to OUTPUT 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "OUTPUT",
}
`;

exports[`Monitor Jobs api method wait for status common polling should return after the status has changed from INPUT to ACTIVE 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "ACTIVE",
}
`;

exports[`Monitor Jobs api method wait for status common polling should return after the status has changed from INPUT to OUTPUT 1`] = `
Object {
  "jobid": "FAKE",
  "jobname": "FAKE",
  "status": "OUTPUT",
}
`;

exports[`Monitor Jobs constant defaults should have a job status 1`] = `"OUTPUT"`;

exports[`Monitor Jobs constant defaults should have a max attempts 1`] = `Infinity`;

exports[`Monitor Jobs constant defaults should have a watch delay interval 1`] = `3000`;
